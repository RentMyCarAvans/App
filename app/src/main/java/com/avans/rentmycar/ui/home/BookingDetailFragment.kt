package com.avans.rentmycar.ui.home

import android.hardware.biometrics.BiometricPrompt
import androidx.lifecycle.ViewModelProvider
import android.os.Bundle
import android.util.Log
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.navigation.fragment.findNavController
import androidx.navigation.fragment.navArgs
import com.avans.rentmycar.R
import com.avans.rentmycar.databinding.FragmentBookingDetailBinding
import com.avans.rentmycar.utils.BiometricAuthListener
import com.avans.rentmycar.utils.showBiometricPrompt
import com.avans.rentmycar.viewmodel.BookingViewModel
import com.google.android.material.snackbar.Snackbar

class BookingDetailFragment : Fragment(), BiometricAuthListener {

    // TODO: This was autogenerated. Find out if it is usefull or needed
//    companion object {
//        fun newInstance() = BookingDetailFragment()
//    }

//    private lateinit var viewModel: BookingViewModel

    private lateinit var _binding: FragmentBookingDetailBinding
    private val binding get() = _binding


    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentBookingDetailBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

    }


    override fun onStart() {
        super.onStart()

        val bookingViewModel = ViewModelProvider(requireActivity())[BookingViewModel::class.java]

        val args: BookingDetailFragmentArgs by navArgs()
        val bookingId = args.id

        if (bookingId != null) {
            bookingViewModel.getBookingById(bookingId)
        } else {
            Snackbar.make(binding.root, "No booking found", Snackbar.LENGTH_LONG).show()
            return
        }

        val model = ViewModelProvider(requireActivity())[BookingViewModel::class.java]
        val booking = model.getBookingById(bookingId)

        Log.d("BookingDetailFragment", "Booking: $booking")


        // start ride button
        binding.buttonBookingDetailStartride.setOnClickListener {
            showBiometricPrompt(
                activity = requireActivity() as AppCompatActivity,
                listener = this,
                cryptoObject = null,
                allowDeviceCredential = true,
                title = getString(R.string.BiometricPrompt_title),
                description = getString(R.string.BiometricPrompt_description),
                subtitle = ""
            )
        }


    }


    // TODO: This was autogenerated. Find out if it is usefull or needed
//    override fun onActivityCreated(savedInstanceState: Bundle?) {
//        super.onActivityCreated(savedInstanceState)
//        viewModel = ViewModelProvider(this).get(BookingViewModel::class.java)
//        // TODO: Use the ViewModel
//    }


    override fun onBiometricAuthenticateError(error: Int, errMsg: String) {
        when (error) {
            BiometricPrompt.BIOMETRIC_ERROR_USER_CANCELED -> {
                Toast.makeText(requireContext(), "Cancelled", Toast.LENGTH_SHORT)
                    .show()
            }
            BiometricPrompt.BIOMETRIC_ERROR_NO_DEVICE_CREDENTIAL -> {
                Toast.makeText(requireContext(), "No device credential", Toast.LENGTH_SHORT)
                    .show()
            }
        }
    }


    override fun onBiometricAuthenticateSuccess(result: androidx.biometric.BiometricPrompt.AuthenticationResult) {
        Toast.makeText(requireContext(), "Succes", Toast.LENGTH_SHORT)
            .show()
        findNavController().navigate(R.id.action_homeDetailFragment2_to_rideFragment)


    }

}